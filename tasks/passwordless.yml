---

- name: Generating ssh key on servers
  command: ssh-keygen -q -t rsa -f ~postgres/.ssh/id_rsa -C "" -N ""
  become: yes
  become_user: postgres
  args:
    creates: ~postgres/.ssh/id_rsa

- name: Fetching ssh keys to your localhost (/tmp/id_rsa{primary,standby,backup}.pub)
  fetch:
    src: ~postgres/.ssh/id_rsa.pub
    dest: /tmp/id_rsa-{{ inventory_hostname }}.pub
    flat: yes
    force: yes

- name: Copying public keys from your localhost to servers (/tmp/id_rsa{primary,standby,backup}.pub)
  copy:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    owner: postgres
    group: postgres
    mode: 0644
  with_items:
    - { src: /tmp/id_rsa-primary.pub, dest: /tmp/id_rsa-primary.pub }
    - { src: /tmp/id_rsa-standby.pub, dest: /tmp/id_rsa-standby.pub }
    - { src: /tmp/id_rsa-backup.pub, dest: /tmp/id_rsa-backup.pub }

- name: Creating authorized_keys file if it doesn't exists (~postgres/.ssh/authorized_keys)
  copy:
    content: ""
    dest: ~postgres/.ssh/authorized_keys
    force: no
    group: postgres
    owner: postgres
    mode: 0600

- name: Creating known_hosts file if it doesn't exists (~postgres/.ssh/known_hosts)
  copy:
    content: ""
    dest: ~postgres/.ssh/known_hosts
    force: no
    group: postgres
    owner: postgres
    mode: 0600

- name: Adding ssh keys to postgres user's authorized_keys file
  become: yes
  become_user: postgres
  shell: "{{ item }}"
  with_items:
    - if [ primary == {{ inventory_hostname }} ]; then cat /tmp/id_rsa-backup.pub >> ~postgres/.ssh/authorized_keys; fi
    - if [ standby == {{ inventory_hostname }} ]; then cat /tmp/id_rsa-backup.pub >> ~postgres/.ssh/authorized_keys; fi
    - if [ backup == {{ inventory_hostname }} ]; then cat /tmp/id_rsa-{primary,standby}.pub >> ~postgres/.ssh/authorized_keys; fi

- name: Writing host vertifications to known_hosts file.
  become: yes
  become_user: postgres
  shell: "{{ item }}"
  with_items:
    - if [ primary == {{ inventory_hostname }} ]; then ssh-keyscan -H {{ hostvars['backup']['ansible_default_ipv4']['address'] }} >> ~postgres/.ssh/known_hosts; fi
    - if [ standby == {{ inventory_hostname }} ]; then ssh-keyscan -H {{ hostvars['backup']['ansible_default_ipv4']['address'] }} >> ~postgres/.ssh/known_hosts; fi
    - if [ backup == {{ inventory_hostname }} ]; then ssh-keyscan -H {{ hostvars['primary']['ansible_default_ipv4']['address'] }} {{ hostvars['standby']['ansible_default_ipv4']['address'] }} >> ~postgres/.ssh/known_hosts; fi
